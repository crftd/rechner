{"version":3,"sources":["components/Sidebar/Sidebar.js","components/Calculator/Calculator.js","App.js","serviceWorker.js","index.js","components/Sidebar/icons/bookmark.svg","components/Sidebar/icons/share.svg","components/Sidebar/icons/github.svg"],"names":["Sidebar","react_default","a","createElement","className","href","src","GitHubSvg","alt","ShareSvg","Bookmark","Component","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","useNextVariants","Calculator","styles","TextField_default","variant","margin","label","Button_default","color","App","components_Calculator_Calculator","components_Sidebar_Sidebar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"6QAuBeA,mLAdX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBC,KAAK,oCAChCJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBE,IAAKC,IAAWC,IAAI,iBAErDP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBE,IAAKG,IAAUD,IAAI,eAClDP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBE,IAAKI,IAAUF,IAAI,2BATtCG,gECDhBC,EAAQC,yBAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,SAGlBE,WAAY,CACVC,iBAAiB,KA8DNC,mLAxDX,OACEtB,EAAAC,EAAAC,cAACqB,EAAA,iBAAD,CAAkBZ,MAAOA,GACvBX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,YACAH,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CACEE,UAAU,oBACVsB,QAAQ,SACRC,OAAO,SACPC,MAAM,SAER3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CACEE,UAAU,oBACVsB,QAAQ,SACRC,OAAO,SACPC,MAAM,aAGV3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CACEE,UAAU,oBACVsB,QAAQ,SACRC,OAAO,SACPC,MAAM,YAIZ3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CACEE,UAAU,SACVsB,QAAQ,YACRI,MAAM,aAHR,UAQF7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CACEE,UAAU,SACVsB,QAAQ,YACRI,MAAM,WAHR,kBA1CSnB,aCLVoB,mLAbX,OACE9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBACdH,EAAAC,EAAAC,cAAC6B,EAAD,OAEF/B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAChBH,EAAAC,EAAAC,cAAC8B,EAAD,eARQtB,aCMEuB,QACW,cAA7BC,OAAOC,SAASC,UAEkB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAC1B,2DCZNC,IAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.768f1a33.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './Sidebar.css';\nimport Bookmark from './icons/bookmark.svg';\nimport ShareSvg from './icons/share.svg';\nimport GitHubSvg from './icons/github.svg';\n\nclass Sidebar extends Component {\n  render() {\n    return (\n      <div className=\"sidebar\">\n        <div className=\"sidebar__icons\">\n          <a className=\"sidebar__link\" href=\"https://github.com/crftd/rechner\">\n            <img className=\"sidebar__icon\" src={GitHubSvg} alt=\"GitHub icon\"/>\n          </a>\n          <img className=\"sidebar__icon\" src={ShareSvg} alt=\"Share icon\"/>\n          <img className=\"sidebar__icon\" src={Bookmark} alt=\"Bookmark icon\"/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport './Calculator.css';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#ffa994',\n      main: '#f67866',\n      dark: '#bf483b',\n      contrastText: '#000',\n    },\n    secondary: {\n      light: '#8e99f3',\n      main: '#5c6bc0',\n      dark: '#26418f',\n      contrastText: '#fff',\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nclass Calculator extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div className=\"calculator\">\n          <form className=\"calculator__form\">\n            <h1 className=\"calculator__title\">Rechner.</h1>\n            <TextField\n              className=\"calculator__input\"\n              variant=\"filled\"\n              margin=\"normal\"\n              label=\"CIDR\"\n            />\n            <div className=\"calculator__form-fieldset\">\n              <div className=\"calculator__form-input__half\">\n                <TextField\n                  className=\"calculator__input\"\n                  variant=\"filled\"\n                  margin=\"normal\"\n                  label=\"IP from\"\n                />\n              </div>\n              <div className=\"calculator__form-input__half\">\n                <TextField\n                  className=\"calculator__input\"\n                  variant=\"filled\"\n                  margin=\"normal\"\n                  label=\"IP to\"\n                />\n              </div>\n            </div>\n            <div className=\"calculator__form-buttons\">\n              <div className=\"calculator__form-input__half\">\n                <Button\n                  className=\"button\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Clear\n                </Button>\n              </div>\n              <div className=\"calculator__form-input__half\">\n                <Button\n                  className=\"button\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Go\n                </Button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default Calculator;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Calculator from './components/Calculator/Calculator';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <main className=\"main-wrapper\">\n          <Calculator/>\n        </main>\n        <header className=\"sidebar-wrapper\">\n          <Sidebar/>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.info(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.info(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.info('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.info(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bookmark.d8a181ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/share.cf6c4cb0.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";"],"sourceRoot":""}